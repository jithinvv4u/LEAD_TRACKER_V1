"""
Django settings for leadtracker_v1 project.
Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/

Quick-start development settings - unsuitable for production
See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
"""

import os
from configparser import RawConfigParser
from urllib.parse import urlparse

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

config = RawConfigParser()
config.read("/etc/secret/leadtracker_v1/secret.ini")


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.get("app", "SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ROOT_URL = config.get("app", "ROOT_URL")

HOSTNAME = urlparse(ROOT_URL).hostname

ALLOWED_HOSTS = [HOSTNAME]


# Application definition

INSTALLED_APPS = [
    # Base
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Requirements
    "rest_framework",
    "corsheaders",
    "django_filters",
    "fcm_django",
    "nested_admin",
    "rest_framework_swagger",
    "drf_yasg",
    # Utilities
    "django_extensions",
    "debug_toolbar",
    # APIS
    "v1.accounts",
    "v1.communications",
    "v1.leadtracker",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Utilities
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    # CORS header middlewares
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "leadtracker_v1.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "leadtracker_v1.wsgi.application"


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

AUTH_USER_MODEL = "accounts.ProjectUser"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"

# Used in common.library to find location from IP.
GEO_IP_URL = "http://freegeoip.net/json/"

ACCESS_TOKEN_LENGTH = 90
OTP_LENGTH = 6

# Hashdid encoding.

HASHHID_SALT = config.get("libs", "HASHHID_SALT")
HASHID_MIN_LENGTH = 5

# TOTP Token
TOTP_TOKEN = config.get("libs", "TOTP_TOKEN")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": config.get("database", "DB_NAME"),
        "USER": config.get("database", "DB_USER"),
        "PASSWORD": config.get("database", "DB_PASSWORD"),
        "PORT": "5432",
        "HOST": "localhost",
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "common.drf_custom.authentication.TokenAuthentication", 
    ),
    "EXCEPTION_HANDLER": "common.drf_custom.exception_handler.custom_exception_handler",
    "DATETIME_FORMAT": "%s",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_RENDERER_CLASSES": ("common.drf_custom.render.ApiRenderer",),
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
}

# Static files and templates
STATIC_URL = "/static/"
TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATES_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = ("GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS")
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-disposition",
    "content-type",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    # Custom added
    "user-id",
    "bearer",
    "otp",
]
CORS_PREFLIGHT_MAX_AGE = 86400
CORS_ALLOW_CREDENTIALS = True
